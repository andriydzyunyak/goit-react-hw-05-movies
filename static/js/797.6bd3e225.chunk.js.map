{"version":3,"file":"static/js/797.6bd3e225.chunk.js","mappings":"sLAEaA,E,QAAYC,EAAAA,IAAH,8F,mGCCTC,EAAsBD,EAAAA,EAAAA,GAAH,mEAKnBE,GAAWF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,2C,SCDRI,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAACR,EAAD,CAAUS,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA9C,SACGI,KAFID,U,qKCNF,SAASK,IAAc,IAAD,EACnC,GAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAO3CC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,6GAE+BC,EAAAA,GAAiBH,GAFhD,OAEUI,EAFV,OAGIC,EAAaD,GAHjB,gDAKIE,QAAQC,IAAR,MALJ,0DALc,sBACA,KAAVP,GAYAA,GAbU,mCAcZQ,KAED,CAACR,IAEJ,IAAMK,EAAe,SAAAD,GACnB,IAAMK,EAAoBL,EAAaM,QAAQtB,KAAI,kBAAoB,CACrEC,GADiD,EAAGA,GAEpDC,MAFiD,EAAOA,UAI1DM,EAAUa,IAGZ,OACE,UAAC,IAAD,YACE,kBAAME,SAjCV,SAAsBC,GACpBA,EAAMC,iBACNd,EAAgB,CAAEC,MAAOY,EAAME,OAAOC,SAASf,MAAMgB,SA+BrBC,aAAa,MAA3C,WACE,kBACEC,KAAK,QACLC,KAAK,OACLF,aAAa,MACbG,WAAS,EACTC,YAAarB,KAEf,mBAAQmB,KAAK,SAAb,uBAEDlC,IAAU,SAAC,IAAD,CAAYA,OAAQA,S,yMCpDrCqC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,IAAAA,IAAA,gEADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBrB,EAAY,mCAAG,WAAMJ,GAAN,uFACHsB,IAAAA,IAAA,uEAC2CtB,IAFxC,cACpBwB,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZC,EAAe,mCAAG,WAAMC,GAAN,uFACNL,IAAAA,IAAA,iBACXK,EADW,8CADM,cACvBH,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfG,EAAc,mCAAG,WAAMD,GAAN,uFACLL,IAAAA,IAAA,iBACXK,EADW,sDADK,cACtBH,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdI,EAAgB,mCAAG,WAAMF,GAAN,uFACPL,IAAAA,IAAA,iBACXK,EADW,sDADO,cACxBH,EADwB,yBAIvBA,EAASC,MAJc,2CAAH","sources":["Container.styled.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/MoviesPage.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-left: 20px;\n  padding-right: 20px;\n  padding-top: 10px;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesListContainer = styled.ul`\n  margin-top: 10px;\n  margin-left: 20px;\n`;\n\nexport const LinkItem = styled(Link)`\n  color: #0000ff;\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MoviesListContainer,\n  LinkItem,\n} from 'components/MoviesList/MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <MoviesListContainer>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <LinkItem to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </LinkItem>\n        </li>\n      ))}\n    </MoviesListContainer>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from 'services/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Container } from '../Container.styled';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setSearchParams({ query: event.target.elements.query.value });\n  }\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    async function fetchSearchMovies() {\n      try {\n        const searchMovies = await API.searchMovies(query);\n        searchResult(searchMovies);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    if (query) {\n      fetchSearchMovies();\n    }\n  }, [query]);\n\n  const searchResult = searchMovies => {\n    const searchMoviesArray = searchMovies.results.map(({ id, title }) => ({\n      id,\n      title,\n    }));\n    setMovies(searchMoviesArray);\n  };\n\n  return (\n    <Container>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <input\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder={query}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies && <MoviesList movies={movies} />}\n    </Container>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=be62f5641064cac309cf00d464856dbe`\n  );\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=be62f5641064cac309cf00d464856dbe&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=be62f5641064cac309cf00d464856dbe`\n  );\n  return response.data;\n};\n\nexport const getActorsMovie = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=be62f5641064cac309cf00d464856dbe`\n  );\n  return response.data;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=be62f5641064cac309cf00d464856dbe`\n  );\n  return response.data;\n};\n"],"names":["Container","styled","MoviesListContainer","LinkItem","Link","MoviesList","movies","location","useLocation","map","id","title","to","state","from","MoviesPage","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","API","searchMovies","searchResult","console","log","fetchSearchMovies","searchMoviesArray","results","onSubmit","event","preventDefault","target","elements","value","autoComplete","name","type","autoFocus","placeholder","axios","getTrandingMovies","response","data","getMovieDetails","movieId","getActorsMovie","getMoviesReviews"],"sourceRoot":""}