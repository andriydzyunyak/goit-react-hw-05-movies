{"version":3,"file":"static/js/583.8f9e37b3.chunk.js","mappings":"sRAEaA,EAAgBC,EAAAA,EAAAA,GAAH,wEAKbC,EAAgBD,EAAAA,EAAAA,GAAH,oGAObE,EAAeF,EAAAA,EAAAA,IAAH,qIAQZG,EAAYH,EAAAA,EAAAA,EAAH,8G,SCdTI,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1B,OACE,SAACN,EAAD,UACGM,EAAOC,KAAI,SAAAC,GAAK,OACf,UAACN,EAAD,WACGM,EAAMC,cACL,gBACEC,IAAG,wCAAmCF,EAAMC,cAC5CE,IAAKH,EAAMI,QAGb,SAACT,EAAD,wBAEF,SAACC,EAAD,UAAYI,EAAMI,QAClB,uCAAeJ,EAAMK,eAVHL,EAAMM,UCPnB,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOZ,EAAP,KAAea,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE8BC,EAAAA,GAAmBL,GAFjD,OAEUM,EAFV,OAGIC,EAAOD,GAHX,gDAKIE,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,KACC,CAACV,IAEJ,IAAMO,EAAS,SAAAD,GACb,IAAMK,EAAcL,EAAYM,KAAKrB,KACnC,kBAA4C,CAC1CO,GADF,EAAGA,GAEDL,aAFF,EAAOA,aAGLG,KAHF,EAAqBA,KAInBC,UAJF,EAA2BA,cAO7BM,EAAUQ,IAGZ,OAAO,8BAAGrB,IAAU,SAACD,EAAD,CAAWC,OAAQA,Q,yMC/BzCuB,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,IAAAA,IAAA,gEADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHL,IAAAA,IAAA,uEAC2CK,IAFxC,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAe,mCAAG,WAAMnB,GAAN,uFACNa,IAAAA,IAAA,iBACXb,EADW,8CADM,cACvBe,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAc,mCAAG,WAAMpB,GAAN,uFACLa,IAAAA,IAAA,iBACXb,EADW,sDADK,cACtBe,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdK,EAAgB,mCAAG,WAAMrB,GAAN,uFACPa,IAAAA,IAAA,iBACXb,EADW,sDADO,cACxBe,EADwB,yBAIvBA,EAASC,MAJc,2CAAH","sources":["components/MovieCast/MovieCast.styled.jsx","components/MovieCast/MovieCast.jsx","pages/Cast.jsx","services/api.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieCastList = styled.ul`\n  display: inline-block;\n  margin-left: 30px;\n`;\n\nexport const MovieCastItem = styled.li`\n  list-style: none;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const NoImageActor = styled.div`\n  padding-top: 55px;\n  width: 92px;\n  height: 138px;\n  border: 1px solid #000000;\n  text-align: center;\n`;\n\nexport const ActorName = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  margin-top: 20px;\n  margin-bottom: 15px;\n`;\n","import {\n  MovieCastList,\n  MovieCastItem,\n  ActorName,\n  NoImageActor,\n} from 'components/MovieCast/MovieCast.styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieCast = ({ actors }) => {\n  return (\n    <MovieCastList>\n      {actors.map(actor => (\n        <MovieCastItem key={actor.id}>\n          {actor.profile_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w92${actor.profile_path}`}\n              alt={actor.name}\n            />\n          ) : (\n            <NoImageActor>No Image</NoImageActor>\n          )}\n          <ActorName>{actor.name}</ActorName>\n          <p>Character: {actor.character}</p>\n        </MovieCastItem>\n      ))}\n    </MovieCastList>\n  );\n};\n\nMovieCast.propTypes = {\n  actors: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'services/api';\nimport { MovieCast } from 'components/MovieCast/MovieCast';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    async function fetchActorsMovie() {\n      try {\n        const movieActors = await API.getActorsMovie(movieId);\n        Result(movieActors);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchActorsMovie();\n  }, [movieId]);\n\n  const Result = movieActors => {\n    const actorsArray = movieActors.cast.map(\n      ({ id, profile_path, name, character }) => ({\n        id,\n        profile_path,\n        name,\n        character,\n      })\n    );\n    setActors(actorsArray);\n  };\n\n  return <>{actors && <MovieCast actors={actors} />}</>;\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=be62f5641064cac309cf00d464856dbe`\n  );\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=be62f5641064cac309cf00d464856dbe&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=be62f5641064cac309cf00d464856dbe`\n  );\n  return response.data;\n};\n\nexport const getActorsMovie = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=be62f5641064cac309cf00d464856dbe`\n  );\n  return response.data;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=be62f5641064cac309cf00d464856dbe`\n  );\n  return response.data;\n};\n"],"names":["MovieCastList","styled","MovieCastItem","NoImageActor","ActorName","MovieCast","actors","map","actor","profile_path","src","alt","name","character","id","Cast","movieId","useParams","useState","setActors","useEffect","API","movieActors","Result","console","log","fetchActorsMovie","actorsArray","cast","axios","getTrandingMovies","response","data","searchMovies","query","getMovieDetails","getActorsMovie","getMoviesReviews"],"sourceRoot":""}