{"version":3,"file":"static/js/493.fded5879.chunk.js","mappings":"oQAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE8BC,EAAAA,GAAmBN,GAFjD,OAEUO,EAFV,OAGIC,EAAOD,GAHX,gDAKIE,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,KACC,CAACX,IAEJ,IAAMQ,EAAS,SAAAD,GACb,IAAMK,EAAcL,EAAYM,KAAKC,KACnC,kBAA4C,CAC1CC,GADF,EAAGA,GAEDC,aAFF,EAAOA,aAGLC,KAHF,EAAqBA,KAInBC,UAJF,EAA2BA,cAO7Bd,EAAUQ,IAGZ,OACE,8BACGT,IACC,wBACGA,EAAOW,KAAI,SAAAK,GAAK,OACf,2BACE,gBACEC,IAAG,wCAAmCD,EAAMH,cAC5CK,IAAKF,EAAMF,QAEb,kBACCE,EAAMF,MACP,uCAAeE,EAAMD,eAPdC,EAAMJ,a,yMCpC3BO,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,IAAAA,IAAA,gEADQ,cACzBE,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHL,IAAAA,IAAA,uEAC2CK,IAFxC,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAe,mCAAG,WAAM5B,GAAN,uFACNsB,IAAAA,IAAA,iBACXtB,EADW,8CADM,cACvBwB,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAc,mCAAG,WAAM7B,GAAN,uFACLsB,IAAAA,IAAA,iBACXtB,EADW,sDADK,cACtBwB,EADsB,yBAIrBA,EAASC,MAJY,2CAAH,sDAOdK,EAAgB,mCAAG,WAAM9B,GAAN,uFACPsB,IAAAA,IAAA,iBACXtB,EADW,sDADO,cACxBwB,EADwB,yBAIvBA,EAASC,MAJc,2CAAH","sources":["pages/Cast.jsx","services/api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from 'services/api';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n\n  const [actors, setActors] = useState(null);\n\n  useEffect(() => {\n    async function fetchActorsMovie() {\n      try {\n        const movieActors = await API.getActorsMovie(movieId);\n        Result(movieActors);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchActorsMovie();\n  }, [movieId]);\n\n  const Result = movieActors => {\n    const actorsArray = movieActors.cast.map(\n      ({ id, profile_path, name, character }) => ({\n        id,\n        profile_path,\n        name,\n        character,\n      })\n    );\n    setActors(actorsArray);\n  };\n\n  return (\n    <>\n      {actors && (\n        <ul>\n          {actors.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w92${actor.profile_path}`}\n                alt={actor.name}\n              />\n              <br />\n              {actor.name}\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrandingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=be62f5641064cac309cf00d464856dbe`\n  );\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=be62f5641064cac309cf00d464856dbe&query=${query}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=be62f5641064cac309cf00d464856dbe`\n  );\n  return response.data;\n};\n\nexport const getActorsMovie = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=be62f5641064cac309cf00d464856dbe`\n  );\n  return response.data;\n};\n\nexport const getMoviesReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=be62f5641064cac309cf00d464856dbe`\n  );\n  return response.data;\n};\n"],"names":["Cast","movieId","useParams","useState","actors","setActors","useEffect","API","movieActors","Result","console","log","fetchActorsMovie","actorsArray","cast","map","id","profile_path","name","character","actor","src","alt","axios","getTrandingMovies","response","data","searchMovies","query","getMovieDetails","getActorsMovie","getMoviesReviews"],"sourceRoot":""}